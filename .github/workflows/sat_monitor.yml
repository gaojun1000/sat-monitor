name: SAT Test Dates Monitor

on:
  schedule:
    # Run every hour (you can adjust this as needed)
    - cron: '0 * * * *'

  # Allow manual triggering of the workflow
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Using a more stable Python version
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      # Get the state from cache
      - name: Restore state cache
        id: cache-state
        uses: actions/cache@v3
        with:
          path: sat_monitor_state.json
          key: sat-monitor-state-${{ github.run_id }}
          restore-keys: |
            sat-monitor-state-

      # Create an empty state file if it doesn't exist yet
      - name: Create empty state file if it doesn't exist
        run: |
          if [ ! -f sat_monitor_state.json ]; then
            echo '{"timestamp": "", "last_modified": "", "test_date_count": 0, "test_dates": []}' > sat_monitor_state.json
            echo "Created empty state file"
          else
            echo "State file exists"
          fi

      - name: Run SAT Monitor
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID || '-1002594329611' }}
        run: |
          python sat_monitor.py

      - name: Upload logs as artifact (if failure or for debugging)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: sat-monitor-logs
          path: sat_monitor.log
          retention-days: 5